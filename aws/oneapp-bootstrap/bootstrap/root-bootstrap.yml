AWSTemplateFormatVersion: '2010-09-09'
Description: Account Creation Tamplate
Parameters:
  Qualifier:
    Description: An identifier to distinguish multiple bootstrap stacks in the same environment
    Default: oneapp
    Type: String
  pCodeBuildImageVersion:
    Type: String
    Description: Code Build Image
    Default: aws/codebuild/standard:6.0 # aws/codebuild/standard:5.0
  pCodeBuildJavaVersion:
    Type: String
    Description: Code Build Java
    Default: corretto17 # corretto11
Resources:
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: CodePipelineServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                  - 'logs:*'
                  - 'iam:*'
                  - 'eks:*'
                  - 'lambda:*'
                  - 'apigateway:*'
                  - 'ssm:*'
                  - 'ecr:*'
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}/CodePipelineServiceRole
  BootstrapLambdaRole: # IAM Role: Cluster Role
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
        - PolicyName: "BootstrapLambdaRole"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'logs:*'
                Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}/BootstrapLambdaRole
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: artifact-${Qualifier}-${AWS::AccountId}-${AWS::Region}
      # LifecycleConfiguration:
      #     Rules:
      #       - Id: DeleteContentAfter1Day
      #         Status: 'Enabled'
      #         ExpirationInDays: 1
  DeleteArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Sub: artifact-${Qualifier}-delete-${AWS::AccountId}-${AWS::Region}
      LifecycleConfiguration:
          Rules:
            - Id: DeleteContentAfter1Day
              Status: 'Enabled'
              ExpirationInDays: 1
  SSMBootstrapLambdaRoleArn:
    Type: AWS::SSM::Parameter
    DependsOn: BootstrapLambdaRole
    Properties:
      Name: 
        Fn::Sub: /bootstrap/${Qualifier}/BootstrapLambdaRoleArn
      Type: String
      Value: 
        Fn::Sub: "${BootstrapLambdaRole.Arn}"
  SSMCodePipelineServiceRoleArn:
    Type: AWS::SSM::Parameter
    DependsOn: CodePipelineServiceRole
    Properties:
      Name: 
        Fn::Sub: /bootstrap/${Qualifier}/CodePipelineServiceRoleArn
      Type: String
      Value: 
        Fn::Sub: "${CodePipelineServiceRole.Arn}"
  SSMArtifactBucketName:
    Type: AWS::SSM::Parameter
    DependsOn: ArtifactBucket
    Properties:
      Name: 
        Fn::Sub: /bootstrap/${Qualifier}/ArtifactBucketName
      Type: String
      Value: 
        Fn::Sub: artifact-${Qualifier}-${AWS::AccountId}-${AWS::Region}
  SSMArtifactDeleteBucketName:
    Type: AWS::SSM::Parameter
    DependsOn: DeleteArtifactBucket
    Properties:
      Name: 
        Fn::Sub: /bootstrap/${Qualifier}/DeleteArtifactBucketName
      Type: String
      Value: 
        Fn::Sub: artifact-${Qualifier}-delete-${AWS::AccountId}-${AWS::Region}
  SSMCodeBuildImageVersion:
    Type: AWS::SSM::Parameter
    Properties:
      Name: 
        Fn::Sub: /bootstrap/${Qualifier}/CodeBuildImageVersion
      Type: String
      Value: !Ref pCodeBuildImageVersion
  SSMCodeBuildJavaVersion:
    Type: AWS::SSM::Parameter
    Properties:
      Name: 
        Fn::Sub: /bootstrap/${Qualifier}/CodeBuildJavaVersion
      Type: String
      Value: !Ref pCodeBuildJavaVersion

